#!/usr/bin/with-contenv bashio

# Import the add-on configuration options as environment variables

MQTT_USER=$(bashio::config 'mqtt_user')
MQTT_PASSWORD=$(bashio::config 'mqtt_password')
MQTT_SERVER=$(bashio::config 'mqtt_broker_address')
MQTT_PROTOCOL=$(bashio::config 'mqtt_protocol')
MQTT_PORT=$(bashio::config 'mqtt_broker_port')
COMFORT_ADDRESS=$(bashio::config 'comfort_address')
COMFORT_PORT=$(bashio::config 'comfort_port')
COMFORT_LOGIN_ID=$(bashio::config 'comfort_login_id')
COMFORT_CCLX_FILE=$(bashio::config 'comfort_cclx_file')
MQTT_USE_TLS=$(bashio::config 'mqtt_encryption')
MQTT_CA_CERT=$(bashio::config 'broker_ca')
MQTT_CLIENT_CERT=$(bashio::config 'broker_client_cert')
MQTT_CLIENT_KEY=$(bashio::config 'broker_client_key')
MQTT_LOG_LEVEL=$(bashio::config 'log_verbosity')
COMFORT_INPUTS=$(bashio::config 'alarm_inputs')
COMFORT_OUTPUTS=$(bashio::config 'alarm_outputs')
COMFORT_RIO_INPUTS=$(bashio::config 'alarm_rio_inputs')
COMFORT_RIO_OUTPUTS=$(bashio::config 'alarm_rio_outputs')
COMFORT_RESPONSES=$(bashio::config 'alarm_responses')
COMFORT_TIME=$(bashio::config 'comfort_time')
COMFORT_BATTERY_STATUS_ID=$(bashio::config 'comfort_battery_update')

ALPINE_VERSION=$(cat /etc/alpine-release)
export ALPINE_VERSION

# Arguments for Comfort2MQTT to run.
COMFORT_ARGS="--broker-address ${MQTT_SERVER:?unset}"

if [ "${MQTT_PROTOCOL}" != "null" ]; then
   COMFORT_ARGS="${COMFORT_ARGS} --broker-protocol ${MQTT_PROTOCOL}"
fi

if [ "${MQTT_PORT}" != "null" ]; then
   COMFORT_ARGS="${COMFORT_ARGS} --broker-port ${MQTT_PORT}"
fi

if [ "${MQTT_USER}" != "null" ]; then
    COMFORT_ARGS="${COMFORT_ARGS} --broker-username ${MQTT_USER}"
fi

if [ "${MQTT_PASSWORD}" != "null" ]; then
    COMFORT_ARGS="${COMFORT_ARGS} --broker-password ${MQTT_PASSWORD}"
fi

if [ "${MQTT_USE_TLS}" != "null" ]; then
      COMFORT_ARGS="${COMFORT_ARGS} --broker-encryption ${MQTT_USE_TLS}"
fi

if [ "${MQTT_CA_CERT}" != "null" ]; then
      COMFORT_ARGS="${COMFORT_ARGS} --broker-ca ${MQTT_CA_CERT}"
fi

if [ "${MQTT_CLIENT_CERT}" != "null" ]; then
      COMFORT_ARGS="${COMFORT_ARGS} --broker-client-cert ${MQTT_CLIENT_CERT}"
fi

if [ "${MQTT_CLIENT_KEY}" != "null" ]; then
      COMFORT_ARGS="${COMFORT_ARGS} --broker-client-key ${MQTT_CLIENT_KEY}"
fi

if [ "${MQTT_USE_TLS}" == true ]; then
    bashio::log.info "TLS encryption option enabled."
    COMFORT_ARGS="${COMFORT_ARGS} --broker-ca ${MQTT_CA_CERT}"
    #COMFORT_ARGS="${COMFORT_ARGS} --broker-client-cert ${MQTT_CLIENT_CERT} --broker-client-key ${MQTT_CLIENT_KEY}"
else
    bashio::log.warning "TLS encryption option disabled."
fi

if [ "${COMFORT_ADDRESS}" != "null" ]; then
    COMFORT_ARGS="${COMFORT_ARGS} --comfort-address ${COMFORT_ADDRESS}"
fi

if [ "${COMFORT_PORT}" != "null" ]; then
    COMFORT_ARGS="${COMFORT_ARGS} --comfort-port ${COMFORT_PORT}"
fi

if [ "${COMFORT_LOGIN_ID}" != "null" ]; then
    COMFORT_ARGS="${COMFORT_ARGS} --comfort-login-id ${COMFORT_LOGIN_ID}"
fi

if [ "${COMFORT_INPUTS}" != "null" ]; then
    COMFORT_ARGS="${COMFORT_ARGS} --alarm-inputs ${COMFORT_INPUTS}"
fi

if [ "${COMFORT_OUTPUTS}" != "null" ]; then
    COMFORT_ARGS="${COMFORT_ARGS} --alarm-outputs ${COMFORT_OUTPUTS}"
fi

if [ "${COMFORT_RIO_INPUTS}" != "null" ]; then
    COMFORT_ARGS="${COMFORT_ARGS} --alarm-rio-inputs ${COMFORT_RIO_INPUTS}"
fi

if [ "${COMFORT_RIO_OUTPUTS}" != "null" ]; then
    COMFORT_ARGS="${COMFORT_ARGS} --alarm-rio-outputs ${COMFORT_RIO_OUTPUTS}"
fi

if [ "${COMFORT_RESPONSES}" != "null" ]; then
    COMFORT_ARGS="${COMFORT_ARGS} --alarm-responses ${COMFORT_RESPONSES}"
fi

if [ "${COMFORT_CCLX_FILE}" != "null" ]; then
    COMFORT_ARGS="${COMFORT_ARGS} --comfort-cclx-file ${COMFORT_CCLX_FILE}
fi

if [ "${COMFORT_BATTERY_STATUS_ID}" != "null" ]; then
    COMFORT_ARGS="${COMFORT_ARGS} --comfort-battery-update ${COMFORT_BATTERY_STATUS_ID}"
fi

if [ "${COMFORT_TIME}" != "null" ]; then
    COMFORT_ARGS="${COMFORT_ARGS} --comfort-time ${COMFORT_TIME}"
fi

if [ "${MQTT_LOG_LEVEL}" != "null" ]; then
    COMFORT_ARGS="$COMFORT_ARGS --verbosity $MQTT_LOG_LEVEL"
fi

## Run Comfort2MQTT program
bashio::log.info "Starting Comfort to MQTT..."
exec python /comfort2/comfort2.py $COMFORT_ARGS
